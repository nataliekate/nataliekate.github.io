{"data":{"site":{"siteMetadata":{"title":"Natalie's Blog","author":"nataliekate"}},"markdownRemark":{"id":"9b3afd8a-d5db-5406-afd2-1305b0bad42f","excerpt":"参考官方手册在 Git 中整合来自不同分支的修改主要有两种方法：merge 以及 rebase。假设这种情况：在不同的branch上各自有新的commit（fig1）。fig1整合分支最简单的方法是命令。它会把两个branch的最新的snapshot（C3,C4）以及两者最近的共同祖先（C…","html":"<p><a href=\"https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA\">参考官方手册</a></p>\n<p>在 Git 中整合来自不同分支的修改主要有两种方法：merge 以及 rebase。</p>\n<p>假设这种情况：在不同的branch上各自有新的commit（fig1）。</p>\n<p><img src=\"https://git-scm.com/book/en/v2/images/basic-rebase-1.png\" alt=\"fig1\"></p>\n<p>整合分支最简单的方法是<code class=\"language-text\">merge</code>命令。它会把两个branch的最新的snapshot（C3,C4）以及两者最近的共同祖先（C2）进行三方合并。结果是生成（并提交）一个新的snapshot（C5）(fig2)。</p>\n<p><img src=\"https://git-scm.com/book/en/v2/images/basic-rebase-2.png\" alt=\"fig2\"></p>\n<p><code class=\"language-text\">rebase</code>是另一种整合的方法。即：提取在C4中引入的修改，然后在C3的基础上应用一次。</p>\n<p>使用<code class=\"language-text\">rebase</code>命令将提交到某个branch上的修改都移至另一个branch上。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git checkout experiment\n$ git rebase master\nFirst, rewinding head to replay your work on top of it...\nApplying: added staged command</code></pre></div>\n<p><img src=\"https://git-scm.com/book/en/v2/images/basic-rebase-3.png\" alt=\"fig3\"></p>\n<p>原理是首先找到两个branch的最近共同祖先（C2），然后对比当前分支相对于祖先的历次提交，提取相应的修改并存为临时文件，然后将当前分支指向目标base（C3）, 最后以此将之前另存为临时文件的修改依序应用。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git checkout master\n$ git merge experiment</code></pre></div>\n<p><img src=\"https://git-scm.com/book/en/v2/images/basic-rebase-4.png\" alt=\"fig4\"></p>\n<p>在master branch进行快进合并。</p>\n<p>这两种整合方法最终令C4’和C5指向的snapshot是一样的。最终结果没有任何区别，但<code class=\"language-text\">rebase</code>使得提交历更加简洁。</p>\n<p>一般使用<code class=\"language-text\">rebase</code>的目的是确保能保持整洁的提交历史。</p>\n<p>在这种情况下，你首先在自己的分支里进行开发，当开发完成时你需要先将你的代码<code class=\"language-text\">rebase</code>到 <code class=\"language-text\">origin/master</code> 上，然后再向主项目提交修改。 这样的话，该项目的维护者就不再需要进行整合工作，只需要快进合并便可。</p>\n<p>请注意，无论是通过变基，还是通过三方合并，整合的最终结果所指向的快照始终是一样的，只不过提交历史不同罢了。 <strong>变基是将一系列提交按照原有次序依次应用到另一分支上，而合并是把最终结果合在一起。</strong></p>","frontmatter":{"title":"rebase和merge的区别","date":"May 07, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/rebase_merge/","previous":null,"next":{"fields":{"slug":"/restful_api/"},"frontmatter":{"title":"RESTful API?"}}}}